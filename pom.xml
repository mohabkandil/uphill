<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.uphill</groupId>
	<artifactId>uphill</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Uphill</name>
	<description>Uphill Spring Boot Application</description>
	<properties>
		<java.version>21</java.version>
		<mapstruct.version>1.5.5.Final</mapstruct.version>
		<lombok.version>1.18.34</lombok.version>
		<jjwt.version>0.12.3</jjwt.version>
		<flyway.version>10.8.1</flyway.version>
		<guava.version>33.2.0-jre</guava.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
			<version>${flyway.version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>0.2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>21</source>
					<target>21</target>
					<encoding>UTF-8</encoding>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<compilerArgs>
						<arg>-parameters</arg>
						<arg>-Amapstruct.defaultComponentModel=spring</arg>
						<arg>-Amapstruct.unmappedTargetPolicy=IGNORE</arg>
					</compilerArgs>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.2.0</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<excludes>
								<!-- Exclude specific mapper packages -->
								<exclude>**/entrypoint/rest/**/mapper/**</exclude>
								<exclude>**/infrastructure/persistence/**/mapper/**</exclude>
								<!-- Exclude specific request/response packages -->
								<exclude>**/entrypoint/rest/**/request/**</exclude>
								<exclude>**/entrypoint/rest/**/response/**</exclude>
								<exclude>**/core/application/service/**/request/**</exclude>
								<!-- Exclude specific entity packages -->
								<exclude>**/infrastructure/persistence/**/entity/**</exclude>
								<!-- Exclude constants -->
								<exclude>**/constants/**</exclude>
								<!-- Exclude main application class -->
								<exclude>**/UphillApplication.java</exclude>
								<!-- Exclude specific mapper packages -->
								<exclude>**/entrypoint/rest/**/mapper/**</exclude>
								<exclude>**/infrastructure/persistence/**/mapper/**</exclude>
								<!-- Exclude specific request/response packages -->
								<exclude>**/entrypoint/rest/**/request/**</exclude>
								<exclude>**/entrypoint/rest/**/response/**</exclude>
								<exclude>**/core/application/service/**/request/**</exclude>
								<!-- Exclude specific entity packages -->
								<exclude>**/infrastructure/persistence/**/entity/**</exclude>
								<!-- Exclude constants -->
								<exclude>**/constants/**</exclude>
								<!-- Exclude main application class -->
								<exclude>**/UphillApplication.java</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<excludes>
								<!-- Exclude DTOs and simple data objects -->
								<exclude>**/dto/**</exclude>
								<exclude>**/request/**</exclude>
								<exclude>**/response/**</exclude>
								<exclude>**/mapper/**</exclude>
								<exclude>**/entity/**</exclude>
								<exclude>**/domain/**</exclude>
								<exclude>**/config/**</exclude>
								<exclude>**/constants/**</exclude>
								<exclude>**/utils/**</exclude>
								<exclude>**/UphillApplication.java</exclude>
								<exclude>**/entrypoint/rest/**/mapper/**</exclude>
								<exclude>**/infrastructure/persistence/**/mapper/**</exclude>
								<exclude>**/entrypoint/rest/**/request/**</exclude>
								<exclude>**/entrypoint/rest/**/response/**</exclude>
								<exclude>**/core/application/service/**/request/**</exclude>
								<exclude>**/infrastructure/persistence/**/entity/**</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.4.1</version>
				<executions>
					<execution>
						<id>enforce-architecture-boundaries</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<RestrictImports>
									<reason>Core layer must not depend on Entrypoint or Infrastructure layers</reason>
									<bannedImports>
										<bannedImport>com.uphill.entrypoint.**</bannedImport>
										<bannedImport>com.uphill.infrastructure.**</bannedImport>
									</bannedImports>
									<basePackages>
										<basePackage>com.uphill.core.**</basePackage>
									</basePackages>
								</RestrictImports>
								<RestrictImports>
									<reason>Entrypoint layer must not depend on Infrastructure layer</reason>
									<bannedImports>
										<bannedImport>com.uphill.infrastructure.**</bannedImport>
									</bannedImports>
									<basePackages>
										<basePackage>com.uphill.entrypoint.**</basePackage>
									</basePackages>
								</RestrictImports>
								<RestrictImports>
									<reason>Infrastructure layer must not depend on Entrypoint layer</reason>
									<bannedImports>
										<bannedImport>com.uphill.entrypoint.**</bannedImport>
									</bannedImports>
									<basePackages>
										<basePackage>com.uphill.infrastructure.**</basePackage>
									</basePackages>
								</RestrictImports>
							</rules>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>de.skuzzle.enforcer</groupId>
						<artifactId>restrict-imports-enforcer-rule</artifactId>
						<version>2.5.0</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

</project>
